import java_cup.runtime.*;

parser code {:
    Scanner s;
    Parser(Scanner s){ this.s=s; }
:}

/* define how to connect to the scanner! */
scan with {: return s.next_token(); :};

/* Symbol Lists */
/* Terminals (tokens returned by the scanner). */
terminal            PLUS, LPAREN, RPAREN, LBRACK, RBRACK, COMMA, IF, ELSE, PREFIX, REVERSE, IDENT;
terminal String     STRING_LITERAL;        // our scanner provides numbers as strings

/*  Non terminals */
non terminal        begin, fdecl, func, name, body, args, returned;

/* Precedence Declarations */
precedence left     ELSE;

/* The Grammar Rules */
begin     ::= fdecl:fd                          {: System.out.println("public static void main(String[] args){\n"+" "+"\n}\n");
                                                    System.out.println(fd);:};
fdecl     ::= fdecl:fd2 func:f                  {: RESULT = fd2+"\n\n"+f; :}
             |func:f2                           {: RESULT = f2; :};
func      ::= name:n LBRACK body:b RBRACK       {: RESULT = "public static String "+n+"{\n"+b+"\n}"; :};
name      ::= IDENT:i LPAREN args:a RPAREN      {: RESULT = i+"("+a+")"; :};
args      ::= args:a COMMA IDENT:i              {: RESULT = a+", "+i; :}
             |IDENT:i                           {: RESULT = i; :}
             |                                  {: RESULT = ""; :};
body      ::= returned:r                        {: RESULT = "\treturn "+r+";"; :};
returned  ::= STRING_LITERAL:s                  {: RESULT = "\""+s+"\""; :};
